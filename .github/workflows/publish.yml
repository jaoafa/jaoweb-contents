# Publish

name: Publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push event, but only for main branch
  push:
    branches:
      - main
  # Triggers the workflow on pull request event, but only for pull request from not forked repo
  pull_request:
    types:
      - opened
      - synchronize
  # Triggers the workflow on pull request event, but only for pull request with label "🚀request-deploy" (from forked repo)
  # pull_request is not allowed to use secrets, so we use pull_request_target instead (in forked repos)
  pull_request_target:
    types:
      - labeled
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  # default contents: read & write (in forked repos, only read)
  contents: write
  # default deployments: read & write (in forked repos, only read)
  deployments: write
  # default pull-requests: read & write (in forked repos, only read)
  pull-requests: write

# Cancel previous runs that are not completed yet
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # push event in main branch
    # workflow_dispatch event
    # pull_request event from not forked repo
    # pull_request_target event with label "🚀request-deploy" from forked repo
    if: ${{
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) ||
      (github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.fork == true && contains(github.event.label.name, '🚀request-deploy'))
      }}

    steps:
      - name: Checkout jaoafa/jaoweb
        uses: actions/checkout@v3
        with:
          repository: jaoafa/jaoweb

      - name: Remove content
        run: rm -rf content

      - name: Checkout pull request
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          fetch-depth: 0
          path: content

      - name: Download authors.json & categories.json
        run: |
          wget -O content/blog/authors.json https://raw.githubusercontent.com/jaoafa/jaoweb/master/content/blog/authors.json
          wget -O content/blog/categories.json https://raw.githubusercontent.com/jaoafa/jaoweb/master/content/blog/categories.json

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Get cache directory
        id: npm-cache-directory

        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-directory.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn cross-env NUXT_TELEMETRY_DISABLED=1 nuxt build

      - name: Generate
        run: yarn cross-env NUXT_TELEMETRY_DISABLED=1 nuxt generate

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  # Deploy
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 5

    needs:
      - build

    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to Cloudflare Pages
        id: cloudflare-pages-deploy
        uses: cloudflare/pages-action@v1
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          projectName: jaoweb-docs
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create commit comment
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: peter-evans/commit-comment@v2
        with:
          body: |
            ### ⚡ Successfully Cloudflare Pages deployed!
            | Name | Link |
            | :--- | :--- |
            | <span aria-hidden="true">🔨</span> Latest commit | ${{ github.event.pull_request.head.sha || github.sha }} |
            | <span aria-hidden="true">🔍</span> Latest deploy log | ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} |
            | <span aria-hidden="true">😎</span> Deploy Preview Url | [${{ steps.cloudflare-pages-deploy.outputs.url }}](${{ steps.cloudflare-pages-deploy.outputs.url }}) |
            | <span aria-hidden="true">🌳</span> Environment | ${{ steps.cloudflare-pages-deploy.outputs.environment }} |

      - name: Create PR comment
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ### ⚡ Successfully Cloudflare Pages deployed!
            | Name | Link |
            | :--- | :--- |
            | <span aria-hidden="true">🔨</span> Latest commit | ${{ github.event.pull_request.head.sha || github.sha }} |
            | <span aria-hidden="true">🔍</span> Latest deploy log | ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} |
            | <span aria-hidden="true">😎</span> Deploy Preview Url | [${{ steps.cloudflare-pages-deploy.outputs.url }}](${{ steps.cloudflare-pages-deploy.outputs.url }}) |
            | <span aria-hidden="true">🌳</span> Environment | ${{ steps.cloudflare-pages-deploy.outputs.environment }} |

      - name: Remove label
        if: ${{ github.event_name == 'pull_request_target' && contains(github.event.label.name, '🚀request-deploy') }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ['🚀request-deploy']
            })
